/* `XHTML, HTML4, HTML5 Reset
----------------------------------------------------------------------------------------------------*/

a,
abbr,
acronym,
address,
applet,
article,
aside,
audio,
b,
big,
blockquote,
body,
canvas,
caption,
center,
cite,
code,
dd,
del,
details,
dfn,
dialog,
div,
dl,
dt,
em,
embed,
fieldset,
figcaption,
figure,
font,
footer,
form,
h1,
h2,
h3,
h4,
h5,
h6,
header,
hgroup,
html,
i,
iframe,
img,
ins,
kbd,
label,
legend,
li,
mark,
menu,
meter,
nav,
object,
ol,
output,
p,
pre,
progress,
q,
rp,
rt,
ruby,
s,
samp,
section,
small,
span,
strike,
strong,
sub,
summary,
sup,
table,
tbody,
td,
tfoot,
th,
thead,
time,
tr,
tt,
u,
ul,
var,
video,
xmp {
  border: 0;
  margin: 0;
  padding: 0;
  font-size: 100%;
  font-weight:100;
}

html,
body {
  height: 100%;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section {
  display: block;
}

b,
strong {
  font-weight: bold;
}

img {
  color: transparent;
  font-size: 0;
  vertical-align: middle;
  -ms-interpolation-mode: bicubic;
}

li {
  display: list-item; list-style:none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

th,
td,
caption {
  font-weight: normal;
  vertical-align: top;
  text-align: left;
}

q {
  quotes: none;
}

q:before,
q:after {
  content: '';
  content: none;
}

sub,
sup,
small {
  font-size: 75%;
}

sub,
sup {
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

svg {
/*
  For IE9.
*/
  overflow: hidden;
}
* html img,* html .png {
    behavior: expression(( this.runtimeStyle.behavior = "none") &&(   
        this.pngSet ? this.pngSet = true :( this.nodeName ==   "IMG" &&     
        this.src.toLowerCase ( ) . indexOf('.png') > -1 ?(   
        this.runtimeStyle.backgroundImage =   "none", this.runtimeStyle.filter   
        =   "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" +     
        this.src +   "', sizingMethod='image')", this.src =     
        "images/transparent.gif" ) :( this.origBg =   this.origBg ?   this.origBg :   
        this.currentStyle.backgroundImage.toString ( ) . replace('url("', '')   
        . replace('")', ''), this.runtimeStyle.filter =     
        "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" +     
        this.origBg +   "', sizingMethod='crop')",   
        this.runtimeStyle.backgroundImage =   "none" ) ), this.pngSet = true )   
        );   
} 
